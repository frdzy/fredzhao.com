{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-homepage-query-tsx-dc2308a796d2d5cbffe7.js","mappings":"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","sources":["webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/list.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/texts/hero.mdx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/texts/bottom.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/homepage.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/homepage-query.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/blog-list-item.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/listing.tsx"],"sourcesContent":["/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx } from \"theme-ui\"\n\ntype ListProps = {\n  children: React.ReactNode\n}\n\nconst List = ({ children }: ListProps) => (\n  <section\n    sx={{\n      mb: [5, 5, 6],\n      ul: { margin: 0, padding: 0 },\n      li: { listStyle: `none`, mb: 3, a: { variant: `links.listItem` } },\n      variant: `section_bottom`,\n    }}\n  >\n    {children}\n  </section>\n)\n\nexport default List\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Hiya ev'rybody! I'm Fred. This site is a space for me to post what's on my mind,\ncollect interesting things to read, and experiment with coding outside of work.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport Layout from \"./layout\"\nimport Title from \"./title\"\nimport Listing from \"./listing\"\nimport List from \"./list\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\nimport { visuallyHidden } from \"../styles/utils\"\n// @ts-ignore\nimport Hero from \"../texts/hero\"\n// @ts-ignore\nimport Bottom from \"../texts/bottom\"\n\ntype PostsProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  [key: string]: any\n}\n\nconst Homepage = ({ posts }: PostsProps) => {\n  const { basePath, blogPath } = useMinimalBlogConfig()\n  const { siteTitle } = useSiteMetadata()\n\n  return (\n    <Layout>\n      <h1 sx={visuallyHidden}>{siteTitle}</h1>\n      <section sx={{ mb: [5, 6, 7], p: { fontSize: [1, 2, 3], mt: 2 }, variant: `section_hero` }}>\n        <Hero />\n      </section>\n      <Title text=\"Latest Posts\">\n        <Link to={replaceSlashes(`/${basePath}/${blogPath}`)}>Read all posts</Link>\n      </Title>\n      <Listing posts={posts} showTags={false} />\n      <List>\n        <Bottom />\n      </List>\n    </Layout>\n  )\n}\n\nexport default Homepage\n","import { graphql } from \"gatsby\"\nimport HomepageComponent from \"../components/homepage\"\n\nexport default HomepageComponent\n\nexport const query = graphql`\n  query ($formatString: String!) {\n    allPost(sort: { fields: date, order: DESC }, limit: 3) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Homepage from \"../../../components/homepage\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreHomepage({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Homepage posts={allPost.nodes} {...props} />\n}\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx, Box } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <Link to={post.slug} sx={(t) => ({ ...t.styles?.a, fontSize: [1, 2, 3], color: `text` })}>\n      {post.title}\n    </Link>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` â€” `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n"],"names":["_ref","children","jsx","sx","mb","ul","margin","padding","li","listStyle","a","variant","layoutProps","_frontmatter","MDXLayout","MDXContent","components","props","_objectWithoutPropertiesLoose","_excluded","mdx","Object","assign","mdxType","isMDXComponent","posts","_useMinimalBlogConfig","useMinimalBlogConfig","basePath","blogPath","siteTitle","useSiteMetadata","Layout","visuallyHidden","p","fontSize","mt","Hero","Title","text","Link","to","replaceSlashes","Listing","showTags","List","Bottom","_objectDestructuringEmpty","allPost","data","React","Homepage","nodes","tags","tagsPath","map","tag","i","key","slug","t","_t$styles","_objectSpread","styles","name","post","_ref$showTags","Box","color","title","date","ItemTags","_ref$className","className","BlogListItem"],"sourceRoot":""}