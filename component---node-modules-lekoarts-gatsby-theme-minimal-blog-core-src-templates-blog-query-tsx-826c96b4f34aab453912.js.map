{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-blog-query-tsx-826c96b4f34aab453912.js","mappings":"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","sources":["webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/blog.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/blog-query.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/blog.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/blog-list-item.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/listing.tsx"],"sourcesContent":["/** @jsx jsx */\nimport { jsx, Heading, Flex } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport Layout from \"./layout\"\nimport Listing from \"./listing\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\nimport Seo from \"./seo\"\n\ntype PostsProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n}\n\nconst Blog = ({ posts }: PostsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <Layout>\n      <Seo title=\"Blog\" />\n      <Flex sx={{ alignItems: `center`, justifyContent: `space-between`, flexFlow: `wrap` }}>\n        <Heading as=\"h1\" variant=\"styles.h1\" sx={{ marginY: 2 }}>\n          Blog\n        </Heading>\n        <Link\n          sx={(t) => ({ ...t.styles?.a, variant: `links.secondary`, marginY: 2 })}\n          to={replaceSlashes(`/${basePath}/${tagsPath}`)}\n        >\n          View all tags\n        </Link>\n      </Flex>\n      <Listing posts={posts} sx={{ mt: [4, 5] }} />\n    </Layout>\n  )\n}\n\nexport default Blog\n","import { graphql } from \"gatsby\"\nimport BlogComponent from \"../components/blog\"\n\nexport default BlogComponent\n\nexport const query = graphql`\n  query ($formatString: String!) {\n    allPost(sort: { fields: date, order: DESC }) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Blog from \"../../../components/blog\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreBlog({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Blog posts={allPost.nodes} {...props} />\n}\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx, Box } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <Link to={post.slug} sx={(t) => ({ ...t.styles?.a, fontSize: [1, 2, 3], color: `text` })}>\n      {post.title}\n    </Link>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` â€” `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n"],"names":["_ref","posts","tagsPath","basePath","useMinimalBlogConfig","jsx","Layout","Seo","title","Flex","sx","alignItems","justifyContent","flexFlow","Heading","as","variant","marginY","Link","t","_t$styles","_objectSpread","styles","a","to","replaceSlashes","Listing","mt","props","_extends","_objectDestructuringEmpty","data","allPost","React","Blog","Object","assign","nodes","tags","map","tag","i","key","slug","name","post","showTags","Box","mb","fontSize","color","date","ItemTags","className","BlogListItem"],"sourceRoot":""}