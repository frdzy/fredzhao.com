{"version":3,"file":"component---node-modules-lekoarts-gatsby-theme-minimal-blog-core-src-templates-homepage-query-tsx-9337c5c720b8cec85e6c.js","mappings":"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","sources":["webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/list.tsx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/texts/hero.mdx","webpack://minimal-blog/./src/@lekoarts/gatsby-theme-minimal-blog/texts/bottom.mdx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/homepage.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog-core/src/templates/homepage-query.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/@lekoarts/gatsby-theme-minimal-blog-core/components/homepage.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/item-tags.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/blog-list-item.tsx","webpack://minimal-blog/./node_modules/@lekoarts/gatsby-theme-minimal-blog/src/components/listing.tsx"],"sourcesContent":["/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx } from \"theme-ui\"\n\ntype ListProps = {\n  children: React.ReactNode\n}\n\nconst List = ({ children }: ListProps) => (\n  <section\n    sx={{\n      mb: [5, 5, 6],\n      ul: { margin: 0, padding: 0 },\n      li: { listStyle: `none`, mb: 3, a: { variant: `links.listItem` } },\n      variant: `section_bottom`,\n    }}\n  >\n    {children}\n  </section>\n)\n\nexport default List\n","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <p>{`Hiya ev'rybody! I'm Fred. This site is a space for me to post what's on my mind,\ncollect interesting things to read, and experiment with coding outside of work.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport Layout from \"./layout\"\nimport Title from \"./title\"\nimport Listing from \"./listing\"\nimport List from \"./list\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport useSiteMetadata from \"../hooks/use-site-metadata\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\nimport { visuallyHidden } from \"../styles/utils\"\n// @ts-ignore\nimport Hero from \"../texts/hero\"\n// @ts-ignore\nimport Bottom from \"../texts/bottom\"\n\ntype PostsProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  [key: string]: any\n}\n\nconst Homepage = ({ posts }: PostsProps) => {\n  const { basePath, blogPath } = useMinimalBlogConfig()\n  const { siteTitle } = useSiteMetadata()\n\n  return (\n    <Layout>\n      <h1 sx={visuallyHidden}>{siteTitle}</h1>\n      <section sx={{ mb: [5, 6, 7], p: { fontSize: [1, 2, 3], mt: 2 }, variant: `section_hero` }}>\n        <Hero />\n      </section>\n      <Title text=\"Latest Posts\">\n        <Link to={replaceSlashes(`/${basePath}/${blogPath}`)}>Read all posts</Link>\n      </Title>\n      <Listing posts={posts} showTags={false} />\n      <List>\n        <Bottom />\n      </List>\n    </Layout>\n  )\n}\n\nexport default Homepage\n","import { graphql } from \"gatsby\"\nimport HomepageComponent from \"../components/homepage\"\n\nexport default HomepageComponent\n\nexport const query = graphql`\n  query ($formatString: String!) {\n    allPost(sort: { fields: date, order: DESC }, limit: 3) {\n      nodes {\n        slug\n        title\n        date(formatString: $formatString)\n        excerpt\n        timeToRead\n        description\n        tags {\n          name\n          slug\n        }\n      }\n    }\n  }\n`\n","import * as React from \"react\"\nimport Homepage from \"../../../components/homepage\"\n\ntype Props = {\n  data: {\n    allPost: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function MinimalBlogCoreHomepage({ ...props }: Props) {\n  const {\n    data: { allPost },\n  } = props\n\n  return <Homepage posts={allPost.nodes} {...props} />\n}\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport * as React from \"react\"\nimport { Link } from \"gatsby\"\nimport useMinimalBlogConfig from \"../hooks/use-minimal-blog-config\"\nimport replaceSlashes from \"../utils/replaceSlashes\"\n\ntype TagsProps = {\n  tags: {\n    name: string\n    slug: string\n  }[]\n}\n\nconst ItemTags = ({ tags }: TagsProps) => {\n  const { tagsPath, basePath } = useMinimalBlogConfig()\n\n  return (\n    <React.Fragment>\n      {tags.map((tag, i) => (\n        <React.Fragment key={tag.slug}>\n          {!!i && `, `}\n          <Link sx={(t) => ({ ...t.styles?.a })} to={replaceSlashes(`/${basePath}/${tagsPath}/${tag.slug}`)}>\n            {tag.name}\n          </Link>\n        </React.Fragment>\n      ))}\n    </React.Fragment>\n  )\n}\n\nexport default ItemTags\n","/** @jsx jsx */\nimport * as React from \"react\"\nimport { jsx, Box } from \"theme-ui\"\nimport { Link } from \"gatsby\"\nimport ItemTags from \"./item-tags\"\n\ntype BlogListItemProps = {\n  post: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }\n  showTags?: boolean\n}\n\nconst BlogListItem = ({ post, showTags = true }: BlogListItemProps) => (\n  <Box mb={4}>\n    <Link to={post.slug} sx={(t) => ({ ...t.styles?.a, fontSize: [1, 2, 3], color: `text` })}>\n      {post.title}\n    </Link>\n    <p sx={{ color: `secondary`, mt: 1, a: { color: `secondary` }, fontSize: [1, 1, 2] }}>\n      <time>{post.date}</time>\n      {post.tags && showTags && (\n        <React.Fragment>\n          {` â€” `}\n          <ItemTags tags={post.tags} />\n        </React.Fragment>\n      )}\n    </p>\n  </Box>\n)\n\nexport default BlogListItem\n","/** @jsx jsx */\nimport { jsx } from \"theme-ui\"\nimport BlogListItem from \"./blog-list-item\"\n\ntype ListingProps = {\n  posts: {\n    slug: string\n    title: string\n    date: string\n    excerpt: string\n    description: string\n    timeToRead?: number\n    tags?: {\n      name: string\n      slug: string\n    }[]\n  }[]\n  className?: string\n  showTags?: boolean\n}\n\nconst Listing = ({ posts, className = ``, showTags = true }: ListingProps) => (\n  <section sx={{ mb: [5, 6, 7] }} className={className}>\n    {posts.map((post) => (\n      <BlogListItem key={post.slug} post={post} showTags={showTags} />\n    ))}\n  </section>\n)\n\nexport default Listing\n"],"names":["_ref","children","jsx","sx","mb","ul","margin","padding","li","listStyle","a","variant","layoutProps","_frontmatter","MDXContent","components","props","_objectWithoutProperties","_excluded","mdx","Object","assign","mdxType","isMDXComponent","posts","basePath","blogPath","useMinimalBlogConfig","siteTitle","useSiteMetadata","Layout","visuallyHidden","p","fontSize","mt","Hero","Title","text","Link","to","replaceSlashes","Listing","showTags","List","Bottom","_extends","_objectDestructuringEmpty","data","allPost","React","Homepage","nodes","tags","tagsPath","map","tag","i","key","slug","t","_t$styles","_objectSpread","styles","name","post","Box","color","title","date","ItemTags","className","BlogListItem"],"sourceRoot":""}